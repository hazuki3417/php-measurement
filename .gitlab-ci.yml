# Runnerとして利用するDockerコンテナイメージを指定
image: hazuki3417/ubuntu_nginx_php:latest

# job間で共有するディレクトリを指定する
# cache:
#   paths:
#     - vendor/
#     - docs/coverage
#     - docs/phpdoc

# stages:
#   - prepare
#   - build
#   - test
#   - generate
#   - save
#   - deploy

# check:
#   stage: prepare
#   script: 
#     - export

# setting_composer:
#   stage: prepare
#   script: 
#     - php composer.phar install
#     - php composer.phar dumpautoload

# test_php:
#   # カバレッジ出力のときのみ自前のものをつかう
#   image: php:5.6-cli
#   only:
#     - master
#   stage: test
#   script: 
#     - ./vendor/bin/phpunit -c ./phpunit.xml 

# coverage_php:
#   only:
#     - master
#   stage: generate
#   script:
#     # php coverageを出力
#     - phpdbg -qrr ./vendor/bin/phpunit -c ./phpunit.xml

# document_php:
#   only:
#     - master
#   stage: generate
#   script:
#     # php documentを出力
#     - ./vendor/bin/phpdoc -c ./phpdoc.dist.xml


# save_documents:
#   only:
#     - master
#   stage: save
#   script: 
#     # Gitのセットアップ
#     - git config user.name $GITLAB_USER_NAME
#     - git config user.email $GITLAB_USER_EMAIL
#     - git remote set-url origin https://gitlab-ci-token:$GITLAB_API_ACCESS_TOKEN@${CI_REPOSITORY_URL##*@}
#     - git checkout $CI_COMMIT_REF_NAME
#     - git config -l
#     # - git log --max-count=5
#     # git logを出力（デバッグ用）
#     # - git log --max-count=5
#     # 差分があるときはコミット
#     - git add ./docs
#     - |-
#       if [ `git status -s | wc -l` -gt 0 ]; then
#           git commit -m "Commit documents generated by GitLab CI"
#           git push --push-option=ci.skip origin $CI_COMMIT_REF_NAME
#       fi
